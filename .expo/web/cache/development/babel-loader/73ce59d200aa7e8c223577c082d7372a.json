{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\FSD01-Mobile Development\\\\mobile\\\\app01\\\\src\\\\pages\\\\Contact\\\\index.tsx\";\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PickerSelect from 'react-native-picker-select';\nimport tzdbService from \"../../services/timezonedb\";\nimport InputTextField from \"../../components/InputTextField\";\nexport default function ContactPage() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      phone = _React$useState4[0],\n      setPhone = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      timezone = _React$useState6[0],\n      setTimezone = _React$useState6[1];\n\n  tzdbService.get('').then(function (_ref) {\n    var data = _ref.data;\n    console.log(data.zones);\n  });\n\n  function handleSave() {\n    if (name === undefined || name.trim() === '') {\n      alert('Nome é obrigatório');\n      return;\n    }\n\n    if (phone === undefined || phone.trim() === '') {\n      alert('Telefone é obrigatório');\n      return;\n    }\n\n    if (timezone === undefined || timezone.trim() === '') {\n      alert('Fuso horário é obrigatório');\n      return;\n    }\n\n    var contact = {\n      name: name,\n      phone: phone,\n      timezone: timezone\n    };\n    console.log(contact);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(InputTextField, {\n    label: \"Nome\",\n    onChange: setName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(InputTextField, {\n    label: \"Telefone\",\n    onChange: setPhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(InputTextField, {\n    label: \"Fuso Hor\\xE1rio\",\n    onChange: setTimezone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), React.createElement(PickerSelect, {\n    style: {\n      viewContainer: {\n        marginBottom: 20\n      },\n      inputAndroid: bothStyle,\n      inputIOS: bothStyle,\n      inputWeb: bothStyle\n    },\n    placeholder: {\n      label: \"Fuso Horário\"\n    },\n    items: [{\n      label: '-03:00',\n      value: -3\n    }, {\n      label: '00:00',\n      value: 0\n    }, {\n      label: '+06:00',\n      value: 6\n    }],\n    onValueChange: function onValueChange(value) {\n      return value && setTimezone(value.toString());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Salvar\",\n    onPress: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n}\nvar bothStyle = {\n  paddingHorizontal: 10,\n  paddingVertical: 8,\n  paddingRight: 30,\n  borderRadius: 5,\n  borderWidth: 1,\n  color: 'black',\n  fontSize: 16,\n  height: 50\n};","map":{"version":3,"sources":["D:/FSD01-Mobile Development/mobile/app01/src/pages/Contact/index.tsx"],"names":["React","PickerSelect","tzdbService","InputTextField","ContactPage","useState","name","setName","phone","setPhone","timezone","setTimezone","get","then","data","console","log","zones","handleSave","undefined","trim","alert","contact","viewContainer","marginBottom","inputAndroid","bothStyle","inputIOS","inputWeb","label","value","toString","paddingHorizontal","paddingVertical","paddingRight","borderRadius","borderWidth","color","fontSize","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, TextStyle, View} from 'react-native';\r\nimport PickerSelect from 'react-native-picker-select';\r\n\r\nimport tzdbService from '../../services/timezonedb';\r\nimport InputTextField from '../../components/InputTextField';\r\nimport {Contact} from '../../models/contact';\r\n\r\nexport default function ContactPage() {\r\n\r\n    const [name, setName] = React.useState<string>('');\r\n    const [phone, setPhone] = React.useState<string>('');\r\n    const [timezone, setTimezone] = React.useState<string>('');\r\n    \r\n    // pode ser usado para buscar a lista de zones\r\n/*     fetch(URL, { method: 'GET' })\r\n        .then(res => res.json())\r\n        .then((data: any) => {\r\n            console.log(data.zones);\r\n        });\r\n */\r\n\r\n    tzdbService.get('').then(({ data }: any) => {\r\n        console.log(data.zones);\r\n    });\r\n\r\n\r\n    function handleSave() { \r\n        \r\n        if (name === undefined || name.trim() === '') {\r\n            alert('Nome é obrigatório');\r\n            return;\r\n        }\r\n       \r\n        if (phone === undefined || phone.trim() === '') {\r\n            alert('Telefone é obrigatório');\r\n            return;\r\n        }\r\n\r\n        if (timezone === undefined || timezone.trim() === '') {\r\n            alert('Fuso horário é obrigatório');\r\n            return;\r\n        }\r\n\r\n        const contact: Contact = {\r\n            name, \r\n            phone, \r\n            timezone\r\n        };\r\n        console.log(contact);\r\n    }\r\n    \r\n    return (\r\n        <View>\r\n            <InputTextField label=\"Nome\" onChange={setName} />\r\n\r\n            <InputTextField label=\"Telefone\" onChange={setPhone} />\r\n\r\n            <InputTextField label=\"Fuso Horário\" onChange={setTimezone} />\r\n\r\n            <PickerSelect\r\n                style={{ viewContainer: { marginBottom: 20, }, inputAndroid: bothStyle, inputIOS: bothStyle, inputWeb: bothStyle }}\r\n                placeholder={{ label: \"Fuso Horário\" }}\r\n                items = {[\r\n                    { label: '-03:00', value: -3 },\r\n                    { label: '00:00', value: 0 },\r\n                    { label: '+06:00', value: 6 },\r\n                ]}\r\n                 onValueChange={\r\n                 (value: any) => value && setTimezone(value.toString())\r\n                }\r\n            />\r\n\r\n            <Button title=\"Salvar\" onPress={handleSave} />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst bothStyle: TextStyle = {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 8,\r\n    paddingRight: 30,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    color: 'black',\r\n    fontSize: 16,\r\n    height: 50,\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}